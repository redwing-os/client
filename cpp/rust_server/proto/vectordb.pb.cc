// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rust_server/proto/vectordb.proto

#include "rust_server/proto/vectordb.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace vectordb {

inline constexpr VectorWriteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorWriteResponse::VectorWriteResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorWriteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorWriteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorWriteResponseDefaultTypeInternal() {}
  union {
    VectorWriteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorWriteResponseDefaultTypeInternal _VectorWriteResponse_default_instance_;

inline constexpr VectorUpdateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorUpdateResponse::VectorUpdateResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorUpdateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorUpdateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorUpdateResponseDefaultTypeInternal() {}
  union {
    VectorUpdateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorUpdateResponseDefaultTypeInternal _VectorUpdateResponse_default_instance_;

inline constexpr VectorSearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : query_{},
        metric_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        top_k_{0},
        threshold_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorSearchRequest::VectorSearchRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorSearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorSearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorSearchRequestDefaultTypeInternal() {}
  union {
    VectorSearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorSearchRequestDefaultTypeInternal _VectorSearchRequest_default_instance_;

inline constexpr VectorReadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vector_{},
        found_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorReadResponse::VectorReadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorReadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorReadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorReadResponseDefaultTypeInternal() {}
  union {
    VectorReadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorReadResponseDefaultTypeInternal _VectorReadResponse_default_instance_;

inline constexpr VectorReadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorReadRequest::VectorReadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorReadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorReadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorReadRequestDefaultTypeInternal() {}
  union {
    VectorReadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorReadRequestDefaultTypeInternal _VectorReadRequest_default_instance_;

inline constexpr VectorDeleteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorDeleteResponse::VectorDeleteResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorDeleteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDeleteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDeleteResponseDefaultTypeInternal() {}
  union {
    VectorDeleteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDeleteResponseDefaultTypeInternal _VectorDeleteResponse_default_instance_;

inline constexpr VectorDeleteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorDeleteRequest::VectorDeleteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorDeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDeleteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDeleteRequestDefaultTypeInternal() {}
  union {
    VectorDeleteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDeleteRequestDefaultTypeInternal _VectorDeleteRequest_default_instance_;

inline constexpr SearchResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        score_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchResult::SearchResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SearchResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResultDefaultTypeInternal() {}
  union {
    SearchResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResultDefaultTypeInternal _SearchResult_default_instance_;

inline constexpr VectorWriteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vector_{},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        updated_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VectorWriteRequest::VectorWriteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorWriteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorWriteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorWriteRequestDefaultTypeInternal() {}
  union {
    VectorWriteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorWriteRequestDefaultTypeInternal _VectorWriteRequest_default_instance_;

inline constexpr VectorUpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vector_{},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        updated_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VectorUpdateRequest::VectorUpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorUpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorUpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorUpdateRequestDefaultTypeInternal() {}
  union {
    VectorUpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorUpdateRequestDefaultTypeInternal _VectorUpdateRequest_default_instance_;

inline constexpr VectorSearchResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : matches_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorSearchResponse::VectorSearchResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorSearchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorSearchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorSearchResponseDefaultTypeInternal() {}
  union {
    VectorSearchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorSearchResponseDefaultTypeInternal _VectorSearchResponse_default_instance_;

inline constexpr VectorBatchWriteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vectors_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VectorBatchWriteRequest::VectorBatchWriteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorBatchWriteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorBatchWriteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorBatchWriteRequestDefaultTypeInternal() {}
  union {
    VectorBatchWriteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorBatchWriteRequestDefaultTypeInternal _VectorBatchWriteRequest_default_instance_;
}  // namespace vectordb
static ::_pb::Metadata file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[12];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_rust_5fserver_2fproto_2fvectordb_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_rust_5fserver_2fproto_2fvectordb_2eproto = nullptr;
const ::uint32_t TableStruct_rust_5fserver_2fproto_2fvectordb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _impl_.vector_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _impl_.created_at_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteRequest, _impl_.updated_at_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorBatchWriteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorBatchWriteRequest, _impl_.vectors_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorWriteResponse, _impl_.success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorReadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorReadRequest, _impl_.key_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorReadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorReadResponse, _impl_.vector_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorReadResponse, _impl_.found_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _impl_.vector_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _impl_.created_at_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateRequest, _impl_.updated_at_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorUpdateResponse, _impl_.success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorDeleteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorDeleteRequest, _impl_.key_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorDeleteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorDeleteResponse, _impl_.success_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchRequest, _impl_.query_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchRequest, _impl_.top_k_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchRequest, _impl_.metric_),
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchRequest, _impl_.threshold_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::VectorSearchResponse, _impl_.matches_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::vectordb::SearchResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::vectordb::SearchResult, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::vectordb::SearchResult, _impl_.score_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::vectordb::VectorWriteRequest)},
        {16, -1, -1, sizeof(::vectordb::VectorBatchWriteRequest)},
        {25, -1, -1, sizeof(::vectordb::VectorWriteResponse)},
        {34, -1, -1, sizeof(::vectordb::VectorReadRequest)},
        {43, -1, -1, sizeof(::vectordb::VectorReadResponse)},
        {53, 65, -1, sizeof(::vectordb::VectorUpdateRequest)},
        {69, -1, -1, sizeof(::vectordb::VectorUpdateResponse)},
        {78, -1, -1, sizeof(::vectordb::VectorDeleteRequest)},
        {87, -1, -1, sizeof(::vectordb::VectorDeleteResponse)},
        {96, -1, -1, sizeof(::vectordb::VectorSearchRequest)},
        {108, -1, -1, sizeof(::vectordb::VectorSearchResponse)},
        {117, -1, -1, sizeof(::vectordb::SearchResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::vectordb::_VectorWriteRequest_default_instance_._instance,
    &::vectordb::_VectorBatchWriteRequest_default_instance_._instance,
    &::vectordb::_VectorWriteResponse_default_instance_._instance,
    &::vectordb::_VectorReadRequest_default_instance_._instance,
    &::vectordb::_VectorReadResponse_default_instance_._instance,
    &::vectordb::_VectorUpdateRequest_default_instance_._instance,
    &::vectordb::_VectorUpdateResponse_default_instance_._instance,
    &::vectordb::_VectorDeleteRequest_default_instance_._instance,
    &::vectordb::_VectorDeleteResponse_default_instance_._instance,
    &::vectordb::_VectorSearchRequest_default_instance_._instance,
    &::vectordb::_VectorSearchResponse_default_instance_._instance,
    &::vectordb::_SearchResult_default_instance_._instance,
};
const char descriptor_table_protodef_rust_5fserver_2fproto_2fvectordb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n rust_server/proto/vectordb.proto\022\010vect"
    "ordb\032\037google/protobuf/timestamp.proto\"\221\001"
    "\n\022VectorWriteRequest\022\013\n\003key\030\001 \001(\t\022\016\n\006vec"
    "tor\030\002 \003(\002\022.\n\ncreated_at\030\003 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022.\n\nupdated_at\030\004 \001(\0132\032."
    "google.protobuf.Timestamp\"H\n\027VectorBatch"
    "WriteRequest\022-\n\007vectors\030\001 \003(\0132\034.vectordb"
    ".VectorWriteRequest\"&\n\023VectorWriteRespon"
    "se\022\017\n\007success\030\001 \001(\010\" \n\021VectorReadRequest"
    "\022\013\n\003key\030\001 \001(\t\"3\n\022VectorReadResponse\022\016\n\006v"
    "ector\030\001 \003(\002\022\r\n\005found\030\002 \001(\010\"\222\001\n\023VectorUpd"
    "ateRequest\022\013\n\003key\030\001 \001(\t\022\016\n\006vector\030\002 \003(\002\022"
    ".\n\ncreated_at\030\003 \001(\0132\032.google.protobuf.Ti"
    "mestamp\022.\n\nupdated_at\030\004 \001(\0132\032.google.pro"
    "tobuf.Timestamp\"\'\n\024VectorUpdateResponse\022"
    "\017\n\007success\030\001 \001(\010\"\"\n\023VectorDeleteRequest\022"
    "\013\n\003key\030\001 \001(\t\"\'\n\024VectorDeleteResponse\022\017\n\007"
    "success\030\001 \001(\010\"V\n\023VectorSearchRequest\022\r\n\005"
    "query\030\001 \003(\002\022\r\n\005top_k\030\002 \001(\005\022\016\n\006metric\030\003 \001"
    "(\t\022\021\n\tthreshold\030\004 \001(\002\"\?\n\024VectorSearchRes"
    "ponse\022\'\n\007matches\030\001 \003(\0132\026.vectordb.Search"
    "Result\"*\n\014SearchResult\022\013\n\003key\030\001 \001(\t\022\r\n\005s"
    "core\030\002 \001(\0022\276\003\n\010VectorDB\022G\n\006Search\022\035.vect"
    "ordb.VectorSearchRequest\032\036.vectordb.Vect"
    "orSearchResponse\022N\n\nBatchWrite\022!.vectord"
    "b.VectorBatchWriteRequest\032\035.vectordb.Vec"
    "torWriteResponse\022D\n\005Write\022\034.vectordb.Vec"
    "torWriteRequest\032\035.vectordb.VectorWriteRe"
    "sponse\022A\n\004Read\022\033.vectordb.VectorReadRequ"
    "est\032\034.vectordb.VectorReadResponse\022G\n\006Upd"
    "ate\022\035.vectordb.VectorUpdateRequest\032\036.vec"
    "tordb.VectorUpdateResponse\022G\n\006Delete\022\035.v"
    "ectordb.VectorDeleteRequest\032\036.vectordb.V"
    "ectorDeleteResponseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto = {
    false,
    false,
    1347,
    descriptor_table_protodef_rust_5fserver_2fproto_2fvectordb_2eproto,
    "rust_server/proto/vectordb.proto",
    &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
    descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_deps,
    1,
    12,
    schemas,
    file_default_instances,
    TableStruct_rust_5fserver_2fproto_2fvectordb_2eproto::offsets,
    file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto,
    file_level_enum_descriptors_rust_5fserver_2fproto_2fvectordb_2eproto,
    file_level_service_descriptors_rust_5fserver_2fproto_2fvectordb_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter() {
  return &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_rust_5fserver_2fproto_2fvectordb_2eproto(&descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto);
namespace vectordb {
// ===================================================================

class VectorWriteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorWriteRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& created_at(const VectorWriteRequest* msg);
  static void set_has_created_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& updated_at(const VectorWriteRequest* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& VectorWriteRequest::_Internal::created_at(const VectorWriteRequest* msg) {
  return *msg->_impl_.created_at_;
}
const ::google::protobuf::Timestamp& VectorWriteRequest::_Internal::updated_at(const VectorWriteRequest* msg) {
  return *msg->_impl_.updated_at_;
}
void VectorWriteRequest::clear_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VectorWriteRequest::clear_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VectorWriteRequest::VectorWriteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vector_{visibility, arena, from.vector_},
        key_(arena, from.key_) {}

VectorWriteRequest::VectorWriteRequest(
    ::google::protobuf::Arena* arena,
    const VectorWriteRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorWriteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_)
                : nullptr;
  _impl_.updated_at_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.updated_at_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vector_{visibility, arena},
        key_(arena) {}

inline void VectorWriteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));
}
VectorWriteRequest::~VectorWriteRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorWriteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorWriteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  delete _impl_.created_at_;
  delete _impl_.updated_at_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorWriteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.Clear();
  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorWriteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 39, 2> VectorWriteRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorWriteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp updated_at = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.updated_at_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.key_)}},
    // repeated float vector = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.vector_)}},
    // .google.protobuf.Timestamp created_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.created_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float vector = 2;
    {PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.vector_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // .google.protobuf.Timestamp created_at = 3;
    {PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updated_at = 4;
    {PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\33\3\0\0\0\0\0\0"
    "vectordb.VectorWriteRequest"
    "key"
  }},
};

::uint8_t* VectorWriteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorWriteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.VectorWriteRequest.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float vector = 2;
  if (this->_internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_vector(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_at = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorWriteRequest)
  return target;
}

::size_t VectorWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorWriteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float vector = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_vector_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp created_at = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.created_at_);
    }

    // .google.protobuf.Timestamp updated_at = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.updated_at_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorWriteRequest::_class_data_ = {
    VectorWriteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorWriteRequest::GetClassData() const {
  return &_class_data_;
}

void VectorWriteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorWriteRequest*>(&to_msg);
  auto& from = static_cast<const VectorWriteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorWriteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vector()->MergeFrom(from._internal_vector());
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_created_at());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_updated_at());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorWriteRequest::CopyFrom(const VectorWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorWriteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorWriteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorWriteRequest::InternalSwap(VectorWriteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vector_.InternalSwap(&other->_impl_.vector_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.updated_at_)
      + sizeof(VectorWriteRequest::_impl_.updated_at_)
      - PROTOBUF_FIELD_OFFSET(VectorWriteRequest, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata VectorWriteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[0]);
}
// ===================================================================

class VectorBatchWriteRequest::_Internal {
 public:
};

VectorBatchWriteRequest::VectorBatchWriteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorBatchWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorBatchWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : vectors_{visibility, arena, from.vectors_},
        _cached_size_{0} {}

VectorBatchWriteRequest::VectorBatchWriteRequest(
    ::google::protobuf::Arena* arena,
    const VectorBatchWriteRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorBatchWriteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorBatchWriteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorBatchWriteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vectors_{visibility, arena},
        _cached_size_{0} {}

inline void VectorBatchWriteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VectorBatchWriteRequest::~VectorBatchWriteRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorBatchWriteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorBatchWriteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorBatchWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorBatchWriteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vectors_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorBatchWriteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VectorBatchWriteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorBatchWriteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .vectordb.VectorWriteRequest vectors = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorBatchWriteRequest, _impl_.vectors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .vectordb.VectorWriteRequest vectors = 1;
    {PROTOBUF_FIELD_OFFSET(VectorBatchWriteRequest, _impl_.vectors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::vectordb::VectorWriteRequest>()},
  }}, {{
  }},
};

::uint8_t* VectorBatchWriteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorBatchWriteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .vectordb.VectorWriteRequest vectors = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_vectors_size()); i < n; i++) {
    const auto& repfield = this->_internal_vectors().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorBatchWriteRequest)
  return target;
}

::size_t VectorBatchWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorBatchWriteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vectordb.VectorWriteRequest vectors = 1;
  total_size += 1UL * this->_internal_vectors_size();
  for (const auto& msg : this->_internal_vectors()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorBatchWriteRequest::_class_data_ = {
    VectorBatchWriteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorBatchWriteRequest::GetClassData() const {
  return &_class_data_;
}

void VectorBatchWriteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorBatchWriteRequest*>(&to_msg);
  auto& from = static_cast<const VectorBatchWriteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorBatchWriteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vectors()->MergeFrom(
      from._internal_vectors());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorBatchWriteRequest::CopyFrom(const VectorBatchWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorBatchWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorBatchWriteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorBatchWriteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorBatchWriteRequest::InternalSwap(VectorBatchWriteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vectors_.InternalSwap(&other->_impl_.vectors_);
}

::google::protobuf::Metadata VectorBatchWriteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[1]);
}
// ===================================================================

class VectorWriteResponse::_Internal {
 public:
};

VectorWriteResponse::VectorWriteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorWriteResponse)
}
VectorWriteResponse::VectorWriteResponse(
    ::google::protobuf::Arena* arena, const VectorWriteResponse& from)
    : VectorWriteResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VectorWriteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VectorWriteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
VectorWriteResponse::~VectorWriteResponse() {
  // @@protoc_insertion_point(destructor:vectordb.VectorWriteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorWriteResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorWriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorWriteResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorWriteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VectorWriteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorWriteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VectorWriteResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VectorWriteResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(VectorWriteResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VectorWriteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorWriteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorWriteResponse)
  return target;
}

::size_t VectorWriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorWriteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorWriteResponse::_class_data_ = {
    VectorWriteResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorWriteResponse::GetClassData() const {
  return &_class_data_;
}

void VectorWriteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorWriteResponse*>(&to_msg);
  auto& from = static_cast<const VectorWriteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorWriteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorWriteResponse::CopyFrom(const VectorWriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorWriteResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorWriteResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorWriteResponse::InternalSwap(VectorWriteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata VectorWriteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[2]);
}
// ===================================================================

class VectorReadRequest::_Internal {
 public:
};

VectorReadRequest::VectorReadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorReadRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorReadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        _cached_size_{0} {}

VectorReadRequest::VectorReadRequest(
    ::google::protobuf::Arena* arena,
    const VectorReadRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorReadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorReadRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorReadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        _cached_size_{0} {}

inline void VectorReadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VectorReadRequest::~VectorReadRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorReadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorReadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorReadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorReadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 38, 2> VectorReadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorReadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorReadRequest, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(VectorReadRequest, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\3\0\0\0\0\0\0"
    "vectordb.VectorReadRequest"
    "key"
  }},
};

::uint8_t* VectorReadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorReadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.VectorReadRequest.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorReadRequest)
  return target;
}

::size_t VectorReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorReadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorReadRequest::_class_data_ = {
    VectorReadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorReadRequest::GetClassData() const {
  return &_class_data_;
}

void VectorReadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorReadRequest*>(&to_msg);
  auto& from = static_cast<const VectorReadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorReadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorReadRequest::CopyFrom(const VectorReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorReadRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorReadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorReadRequest::InternalSwap(VectorReadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
}

::google::protobuf::Metadata VectorReadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[3]);
}
// ===================================================================

class VectorReadResponse::_Internal {
 public:
};

VectorReadResponse::VectorReadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorReadResponse)
}
inline PROTOBUF_NDEBUG_INLINE VectorReadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : vector_{visibility, arena, from.vector_},
        _cached_size_{0} {}

VectorReadResponse::VectorReadResponse(
    ::google::protobuf::Arena* arena,
    const VectorReadResponse& from)
    : ::google::protobuf::Message(arena) {
  VectorReadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.found_ = from._impl_.found_;

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorReadResponse)
}
inline PROTOBUF_NDEBUG_INLINE VectorReadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vector_{visibility, arena},
        _cached_size_{0} {}

inline void VectorReadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.found_ = {};
}
VectorReadResponse::~VectorReadResponse() {
  // @@protoc_insertion_point(destructor:vectordb.VectorReadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorReadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorReadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.Clear();
  _impl_.found_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorReadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> VectorReadResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorReadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool found = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VectorReadResponse, _impl_.found_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VectorReadResponse, _impl_.found_)}},
    // repeated float vector = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorReadResponse, _impl_.vector_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float vector = 1;
    {PROTOBUF_FIELD_OFFSET(VectorReadResponse, _impl_.vector_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // bool found = 2;
    {PROTOBUF_FIELD_OFFSET(VectorReadResponse, _impl_.found_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VectorReadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorReadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float vector = 1;
  if (this->_internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_vector(), target);
  }

  // bool found = 2;
  if (this->_internal_found() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_found(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorReadResponse)
  return target;
}

::size_t VectorReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorReadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float vector = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_vector_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // bool found = 2;
  if (this->_internal_found() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorReadResponse::_class_data_ = {
    VectorReadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorReadResponse::GetClassData() const {
  return &_class_data_;
}

void VectorReadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorReadResponse*>(&to_msg);
  auto& from = static_cast<const VectorReadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorReadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vector()->MergeFrom(from._internal_vector());
  if (from._internal_found() != 0) {
    _this->_internal_set_found(from._internal_found());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorReadResponse::CopyFrom(const VectorReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorReadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorReadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorReadResponse::InternalSwap(VectorReadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vector_.InternalSwap(&other->_impl_.vector_);
        swap(_impl_.found_, other->_impl_.found_);
}

::google::protobuf::Metadata VectorReadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[4]);
}
// ===================================================================

class VectorUpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VectorUpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& created_at(const VectorUpdateRequest* msg);
  static void set_has_created_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& updated_at(const VectorUpdateRequest* msg);
  static void set_has_updated_at(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& VectorUpdateRequest::_Internal::created_at(const VectorUpdateRequest* msg) {
  return *msg->_impl_.created_at_;
}
const ::google::protobuf::Timestamp& VectorUpdateRequest::_Internal::updated_at(const VectorUpdateRequest* msg) {
  return *msg->_impl_.updated_at_;
}
void VectorUpdateRequest::clear_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VectorUpdateRequest::clear_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.updated_at_ != nullptr) _impl_.updated_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
VectorUpdateRequest::VectorUpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vector_{visibility, arena, from.vector_},
        key_(arena, from.key_) {}

VectorUpdateRequest::VectorUpdateRequest(
    ::google::protobuf::Arena* arena,
    const VectorUpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorUpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_)
                : nullptr;
  _impl_.updated_at_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.updated_at_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorUpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorUpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vector_{visibility, arena},
        key_(arena) {}

inline void VectorUpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));
}
VectorUpdateRequest::~VectorUpdateRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorUpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorUpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  delete _impl_.created_at_;
  delete _impl_.updated_at_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorUpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.Clear();
  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updated_at_ != nullptr);
      _impl_.updated_at_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorUpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 40, 2> VectorUpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorUpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp updated_at = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.updated_at_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.key_)}},
    // repeated float vector = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.vector_)}},
    // .google.protobuf.Timestamp created_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.created_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float vector = 2;
    {PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.vector_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // .google.protobuf.Timestamp created_at = 3;
    {PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updated_at = 4;
    {PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.updated_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\34\3\0\0\0\0\0\0"
    "vectordb.VectorUpdateRequest"
    "key"
  }},
};

::uint8_t* VectorUpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorUpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.VectorUpdateRequest.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float vector = 2;
  if (this->_internal_vector_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_vector(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_at = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorUpdateRequest)
  return target;
}

::size_t VectorUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorUpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float vector = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_vector_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp created_at = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.created_at_);
    }

    // .google.protobuf.Timestamp updated_at = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.updated_at_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorUpdateRequest::_class_data_ = {
    VectorUpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorUpdateRequest::GetClassData() const {
  return &_class_data_;
}

void VectorUpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorUpdateRequest*>(&to_msg);
  auto& from = static_cast<const VectorUpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorUpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vector()->MergeFrom(from._internal_vector());
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_created_at());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_updated_at());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorUpdateRequest::CopyFrom(const VectorUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorUpdateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorUpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorUpdateRequest::InternalSwap(VectorUpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vector_.InternalSwap(&other->_impl_.vector_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.updated_at_)
      + sizeof(VectorUpdateRequest::_impl_.updated_at_)
      - PROTOBUF_FIELD_OFFSET(VectorUpdateRequest, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata VectorUpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[5]);
}
// ===================================================================

class VectorUpdateResponse::_Internal {
 public:
};

VectorUpdateResponse::VectorUpdateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorUpdateResponse)
}
VectorUpdateResponse::VectorUpdateResponse(
    ::google::protobuf::Arena* arena, const VectorUpdateResponse& from)
    : VectorUpdateResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VectorUpdateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VectorUpdateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
VectorUpdateResponse::~VectorUpdateResponse() {
  // @@protoc_insertion_point(destructor:vectordb.VectorUpdateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorUpdateResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorUpdateResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorUpdateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VectorUpdateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorUpdateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VectorUpdateResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VectorUpdateResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(VectorUpdateResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VectorUpdateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorUpdateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorUpdateResponse)
  return target;
}

::size_t VectorUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorUpdateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorUpdateResponse::_class_data_ = {
    VectorUpdateResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorUpdateResponse::GetClassData() const {
  return &_class_data_;
}

void VectorUpdateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorUpdateResponse*>(&to_msg);
  auto& from = static_cast<const VectorUpdateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorUpdateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorUpdateResponse::CopyFrom(const VectorUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorUpdateResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorUpdateResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorUpdateResponse::InternalSwap(VectorUpdateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata VectorUpdateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[6]);
}
// ===================================================================

class VectorDeleteRequest::_Internal {
 public:
};

VectorDeleteRequest::VectorDeleteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        _cached_size_{0} {}

VectorDeleteRequest::VectorDeleteRequest(
    ::google::protobuf::Arena* arena,
    const VectorDeleteRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorDeleteRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorDeleteRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorDeleteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        _cached_size_{0} {}

inline void VectorDeleteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VectorDeleteRequest::~VectorDeleteRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorDeleteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorDeleteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorDeleteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorDeleteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> VectorDeleteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorDeleteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorDeleteRequest, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(VectorDeleteRequest, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\3\0\0\0\0\0\0"
    "vectordb.VectorDeleteRequest"
    "key"
  }},
};

::uint8_t* VectorDeleteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorDeleteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.VectorDeleteRequest.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorDeleteRequest)
  return target;
}

::size_t VectorDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorDeleteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorDeleteRequest::_class_data_ = {
    VectorDeleteRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorDeleteRequest::GetClassData() const {
  return &_class_data_;
}

void VectorDeleteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorDeleteRequest*>(&to_msg);
  auto& from = static_cast<const VectorDeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorDeleteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorDeleteRequest::CopyFrom(const VectorDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorDeleteRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorDeleteRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorDeleteRequest::InternalSwap(VectorDeleteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
}

::google::protobuf::Metadata VectorDeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[7]);
}
// ===================================================================

class VectorDeleteResponse::_Internal {
 public:
};

VectorDeleteResponse::VectorDeleteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorDeleteResponse)
}
VectorDeleteResponse::VectorDeleteResponse(
    ::google::protobuf::Arena* arena, const VectorDeleteResponse& from)
    : VectorDeleteResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VectorDeleteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VectorDeleteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
VectorDeleteResponse::~VectorDeleteResponse() {
  // @@protoc_insertion_point(destructor:vectordb.VectorDeleteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorDeleteResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorDeleteResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorDeleteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VectorDeleteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorDeleteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VectorDeleteResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VectorDeleteResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(VectorDeleteResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* VectorDeleteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorDeleteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorDeleteResponse)
  return target;
}

::size_t VectorDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorDeleteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorDeleteResponse::_class_data_ = {
    VectorDeleteResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorDeleteResponse::GetClassData() const {
  return &_class_data_;
}

void VectorDeleteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorDeleteResponse*>(&to_msg);
  auto& from = static_cast<const VectorDeleteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorDeleteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorDeleteResponse::CopyFrom(const VectorDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorDeleteResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorDeleteResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorDeleteResponse::InternalSwap(VectorDeleteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata VectorDeleteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[8]);
}
// ===================================================================

class VectorSearchRequest::_Internal {
 public:
};

VectorSearchRequest::VectorSearchRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : query_{visibility, arena, from.query_},
        metric_(arena, from.metric_),
        _cached_size_{0} {}

VectorSearchRequest::VectorSearchRequest(
    ::google::protobuf::Arena* arena,
    const VectorSearchRequest& from)
    : ::google::protobuf::Message(arena) {
  VectorSearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, top_k_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, top_k_),
           offsetof(Impl_, threshold_) -
               offsetof(Impl_, top_k_) +
               sizeof(Impl_::threshold_));

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorSearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE VectorSearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : query_{visibility, arena},
        metric_(arena),
        _cached_size_{0} {}

inline void VectorSearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, top_k_),
           0,
           offsetof(Impl_, threshold_) -
               offsetof(Impl_, top_k_) +
               sizeof(Impl_::threshold_));
}
VectorSearchRequest::~VectorSearchRequest() {
  // @@protoc_insertion_point(destructor:vectordb.VectorSearchRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorSearchRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.metric_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorSearchRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.query_.Clear();
  _impl_.metric_.ClearToEmpty();
  ::memset(&_impl_.top_k_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.threshold_) -
      reinterpret_cast<char*>(&_impl_.top_k_)) + sizeof(_impl_.threshold_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorSearchRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2> VectorSearchRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VectorSearchRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float threshold = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.threshold_)}},
    // repeated float query = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.query_)}},
    // int32 top_k = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VectorSearchRequest, _impl_.top_k_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.top_k_)}},
    // string metric = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.metric_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float query = 1;
    {PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.query_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // int32 top_k = 2;
    {PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.top_k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string metric = 3;
    {PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.metric_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float threshold = 4;
    {PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\34\0\0\6\0\0\0\0"
    "vectordb.VectorSearchRequest"
    "metric"
  }},
};

::uint8_t* VectorSearchRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorSearchRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float query = 1;
  if (this->_internal_query_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_query(), target);
  }

  // int32 top_k = 2;
  if (this->_internal_top_k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_top_k(), target);
  }

  // string metric = 3;
  if (!this->_internal_metric().empty()) {
    const std::string& _s = this->_internal_metric();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.VectorSearchRequest.metric");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // float threshold = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_threshold = this->_internal_threshold();
  ::uint32_t raw_threshold;
  memcpy(&raw_threshold, &tmp_threshold, sizeof(tmp_threshold));
  if (raw_threshold != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_threshold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorSearchRequest)
  return target;
}

::size_t VectorSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorSearchRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float query = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_query_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string metric = 3;
  if (!this->_internal_metric().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_metric());
  }

  // int32 top_k = 2;
  if (this->_internal_top_k() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_top_k());
  }

  // float threshold = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_threshold = this->_internal_threshold();
  ::uint32_t raw_threshold;
  memcpy(&raw_threshold, &tmp_threshold, sizeof(tmp_threshold));
  if (raw_threshold != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorSearchRequest::_class_data_ = {
    VectorSearchRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorSearchRequest::GetClassData() const {
  return &_class_data_;
}

void VectorSearchRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorSearchRequest*>(&to_msg);
  auto& from = static_cast<const VectorSearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorSearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_query()->MergeFrom(from._internal_query());
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (from._internal_top_k() != 0) {
    _this->_internal_set_top_k(from._internal_top_k());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_threshold = from._internal_threshold();
  ::uint32_t raw_threshold;
  memcpy(&raw_threshold, &tmp_threshold, sizeof(tmp_threshold));
  if (raw_threshold != 0) {
    _this->_internal_set_threshold(from._internal_threshold());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorSearchRequest::CopyFrom(const VectorSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorSearchRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorSearchRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorSearchRequest::InternalSwap(VectorSearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.query_.InternalSwap(&other->_impl_.query_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metric_, &other->_impl_.metric_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.threshold_)
      + sizeof(VectorSearchRequest::_impl_.threshold_)
      - PROTOBUF_FIELD_OFFSET(VectorSearchRequest, _impl_.top_k_)>(
          reinterpret_cast<char*>(&_impl_.top_k_),
          reinterpret_cast<char*>(&other->_impl_.top_k_));
}

::google::protobuf::Metadata VectorSearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[9]);
}
// ===================================================================

class VectorSearchResponse::_Internal {
 public:
};

VectorSearchResponse::VectorSearchResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.VectorSearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE VectorSearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : matches_{visibility, arena, from.matches_},
        _cached_size_{0} {}

VectorSearchResponse::VectorSearchResponse(
    ::google::protobuf::Arena* arena,
    const VectorSearchResponse& from)
    : ::google::protobuf::Message(arena) {
  VectorSearchResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:vectordb.VectorSearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE VectorSearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : matches_{visibility, arena},
        _cached_size_{0} {}

inline void VectorSearchResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VectorSearchResponse::~VectorSearchResponse() {
  // @@protoc_insertion_point(destructor:vectordb.VectorSearchResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VectorSearchResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VectorSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.VectorSearchResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matches_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VectorSearchResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VectorSearchResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VectorSearchResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .vectordb.SearchResult matches = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VectorSearchResponse, _impl_.matches_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .vectordb.SearchResult matches = 1;
    {PROTOBUF_FIELD_OFFSET(VectorSearchResponse, _impl_.matches_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::vectordb::SearchResult>()},
  }}, {{
  }},
};

::uint8_t* VectorSearchResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.VectorSearchResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .vectordb.SearchResult matches = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_matches_size()); i < n; i++) {
    const auto& repfield = this->_internal_matches().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.VectorSearchResponse)
  return target;
}

::size_t VectorSearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.VectorSearchResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vectordb.SearchResult matches = 1;
  total_size += 1UL * this->_internal_matches_size();
  for (const auto& msg : this->_internal_matches()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VectorSearchResponse::_class_data_ = {
    VectorSearchResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VectorSearchResponse::GetClassData() const {
  return &_class_data_;
}

void VectorSearchResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VectorSearchResponse*>(&to_msg);
  auto& from = static_cast<const VectorSearchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.VectorSearchResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matches()->MergeFrom(
      from._internal_matches());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VectorSearchResponse::CopyFrom(const VectorSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.VectorSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VectorSearchResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VectorSearchResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VectorSearchResponse::InternalSwap(VectorSearchResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.matches_.InternalSwap(&other->_impl_.matches_);
}

::google::protobuf::Metadata VectorSearchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[10]);
}
// ===================================================================

class SearchResult::_Internal {
 public:
};

SearchResult::SearchResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:vectordb.SearchResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : key_(arena, from.key_),
        _cached_size_{0} {}

SearchResult::SearchResult(
    ::google::protobuf::Arena* arena,
    const SearchResult& from)
    : ::google::protobuf::Message(arena) {
  SearchResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.score_ = from._impl_.score_;

  // @@protoc_insertion_point(copy_constructor:vectordb.SearchResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        _cached_size_{0} {}

inline void SearchResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.score_ = {};
}
SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:vectordb.SearchResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SearchResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vectordb.SearchResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.score_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SearchResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> SearchResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SearchResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float score = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.score_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float score = 2;
    {PROTOBUF_FIELD_OFFSET(SearchResult, _impl_.score_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\25\3\0\0\0\0\0\0"
    "vectordb.SearchResult"
    "key"
  }},
};

::uint8_t* SearchResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vectordb.SearchResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "vectordb.SearchResult.key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // float score = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_score = this->_internal_score();
  ::uint32_t raw_score;
  memcpy(&raw_score, &tmp_score, sizeof(tmp_score));
  if (raw_score != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vectordb.SearchResult)
  return target;
}

::size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vectordb.SearchResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // float score = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_score = this->_internal_score();
  ::uint32_t raw_score;
  memcpy(&raw_score, &tmp_score, sizeof(tmp_score));
  if (raw_score != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SearchResult::_class_data_ = {
    SearchResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SearchResult::GetClassData() const {
  return &_class_data_;
}

void SearchResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SearchResult*>(&to_msg);
  auto& from = static_cast<const SearchResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:vectordb.SearchResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_score = from._internal_score();
  ::uint32_t raw_score;
  memcpy(&raw_score, &tmp_score, sizeof(tmp_score));
  if (raw_score != 0) {
    _this->_internal_set_score(from._internal_score());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vectordb.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SearchResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SearchResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SearchResult::InternalSwap(SearchResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
        swap(_impl_.score_, other->_impl_.score_);
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_getter, &descriptor_table_rust_5fserver_2fproto_2fvectordb_2eproto_once,
      file_level_metadata_rust_5fserver_2fproto_2fvectordb_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace vectordb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
